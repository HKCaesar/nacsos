# Generated by Django 2.0.5 on 2018-09-13 15:09

import django.contrib.postgres.fields.jsonb
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('parliament', '0031_merge_20180523_1452'),
    ]

    operations = [
        migrations.CreateModel(
            name='TwitterBaseModel',
            fields=[
                ('api_got', models.BooleanField(default=False)),
                ('scrape_got', models.BooleanField(default=False)),
                ('id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField()),
                ('lang', models.CharField(max_length=10)),
                ('entities', django.contrib.postgres.fields.jsonb.JSONField()),
                ('fetched', models.DateTimeField(blank=True, null=True, verbose_name='Fetched')),
            ],
        ),
        migrations.CreateModel(
            name='Status',
            fields=[
                ('twitterbasemodel_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='twitter.TwitterBaseModel')),
                ('text', models.TextField()),
                ('favorited', models.BooleanField(default=False)),
                ('retweeted', models.BooleanField(default=False)),
                ('truncated', models.BooleanField(default=False)),
                ('source', models.CharField(max_length=100)),
                ('source_url', models.URLField(null=True)),
                ('favorites_count', models.PositiveIntegerField()),
                ('retweets_count', models.PositiveIntegerField()),
                ('replies_count', models.PositiveIntegerField(null=True)),
                ('place', django.contrib.postgres.fields.jsonb.JSONField(null=True)),
                ('contributors', django.contrib.postgres.fields.jsonb.JSONField(null=True)),
                ('coordinates', django.contrib.postgres.fields.jsonb.JSONField(null=True)),
                ('geo', django.contrib.postgres.fields.jsonb.JSONField(null=True)),
            ],
            bases=('twitter.twitterbasemodel',),
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('twitterbasemodel_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='twitter.TwitterBaseModel')),
                ('mdb_name', models.CharField(max_length=50)),
                ('monitoring', models.BooleanField(default=False)),
                ('earliest', models.DateTimeField(null=True)),
                ('latest', models.DateTimeField(null=True)),
                ('screen_name', models.CharField(max_length=50, unique=True, verbose_name='Screen name')),
                ('name', models.CharField(max_length=100, verbose_name='Name')),
                ('description', models.TextField(verbose_name='Description')),
                ('location', models.CharField(max_length=100, verbose_name='Location')),
                ('time_zone', models.CharField(max_length=100, null=True, verbose_name='Time zone')),
                ('contributors_enabled', models.BooleanField(default=False, verbose_name='Contributors enabled')),
                ('default_profile', models.BooleanField(default=False, verbose_name='Default profile')),
                ('default_profile_image', models.BooleanField(default=False, verbose_name='Default profile image')),
                ('follow_request_sent', models.BooleanField(default=False, verbose_name='Follow request sent')),
                ('following', models.BooleanField(default=False, verbose_name='Following')),
                ('geo_enabled', models.BooleanField(default=False, verbose_name='Geo enabled')),
                ('is_translator', models.BooleanField(default=False, verbose_name='Is translator')),
                ('notifications', models.BooleanField(default=False, verbose_name='Notifications')),
                ('profile_use_background_image', models.BooleanField(default=False, verbose_name='Profile use background image')),
                ('protected', models.BooleanField(default=False, verbose_name='Protected')),
                ('verified', models.BooleanField(default=False, verbose_name='Verified')),
                ('profile_background_image_url', models.URLField(max_length=300, null=True)),
                ('profile_background_image_url_https', models.URLField(max_length=300, null=True)),
                ('profile_background_tile', models.BooleanField(default=False)),
                ('profile_background_color', models.CharField(max_length=6)),
                ('profile_banner_url', models.URLField(max_length=300, null=True)),
                ('profile_image_url', models.URLField(max_length=300, null=True)),
                ('profile_image_url_https', models.URLField(max_length=300)),
                ('url', models.URLField(max_length=300, null=True)),
                ('profile_link_color', models.CharField(max_length=6)),
                ('profile_sidebar_border_color', models.CharField(max_length=6)),
                ('profile_sidebar_fill_color', models.CharField(max_length=6)),
                ('profile_text_color', models.CharField(max_length=6)),
                ('favorites_count', models.PositiveIntegerField()),
                ('followers_count', models.PositiveIntegerField()),
                ('friends_count', models.PositiveIntegerField()),
                ('listed_count', models.PositiveIntegerField()),
                ('statuses_count', models.PositiveIntegerField()),
                ('utc_offset', models.IntegerField(null=True)),
                ('followers', models.ManyToManyField(to='twitter.User')),
                ('person', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='parliament.Person')),
            ],
            bases=('twitter.twitterbasemodel',),
        ),
        migrations.AddField(
            model_name='status',
            name='author',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='statuses', to='twitter.User'),
        ),
        migrations.AddField(
            model_name='status',
            name='favorites_users',
            field=models.ManyToManyField(related_name='favorites', to='twitter.User'),
        ),
        migrations.AddField(
            model_name='status',
            name='in_reply_to_status',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='replies', to='twitter.Status'),
        ),
        migrations.AddField(
            model_name='status',
            name='in_reply_to_user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='replies', to='twitter.User'),
        ),
        migrations.AddField(
            model_name='status',
            name='retweeted_status',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='retweets', to='twitter.Status'),
        ),
    ]
